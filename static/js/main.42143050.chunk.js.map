{"version":3,"sources":["components/Cards/CardsItem/Pagination.module.css","components/Cards/CardsItem/CardsItem.module.css","components/Cards/Select/Select.module.css","components/Cards/CardsItem/CardItemInfo/CardItemInfo.module.css","components/Header/Header.module.css","components/Cards/Cards.module.css","api/api.ts","api/cardAPI.ts","redux/card-reducer.ts","redux/login-reducer.ts","api/selectAPI.ts","redux/select-reducer.ts","redux/redux-store.ts","components/Cards/CardsItem/CardModalWindow.tsx","components/Cards/CardsItem/Pagination.tsx","components/Cards/CardsItem/CardsItem.tsx","components/Cards/CardsItem/CardsItemContainer.tsx","components/Cards/Select/Select.tsx","components/Cards/Select/SelectContainer.tsx","components/Cards/Cards.tsx","components/Cards/CardsItem/CardItemInfo/CardItemInfo.tsx","components/Cards/CardsItem/CardItemInfo/CardItemInfoContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","components/Login/Otp.tsx","components/Login/LoginContainer.tsx","App.tsx","index.tsx","components/Login/Login.module.css"],"names":["module","exports","intance","axios","create","baseURL","cardAPI","pageSize","page","filter","get","params","q","then","response","data","id","SET_CARDS","SET_TOTAL_COUNT","SET_CURRENT_PAGE","SET_UNIC_ID_CARD","SET_CARD_INFO","initialState","cards","currentPage","totalCount","unicIdCard","cardInfo","actionsCardReducer","type","cardReducer","state","action","login","password","isAuth","codeOTP","isAuthOTP","errorOTP","errorAuth","actionLoginReducer","code","loginReducer","selectAPI","SET_TYPES","SET_SUBTYPES","SET_SUPERTYPES","SET_RARITIES","SET_SELECT","types","subtypes","supertypes","rarities","selectFilter","actionsSelectReducer","selectReducer","selectFilterTemp","JSON","parse","stringify","reducers","combineReducers","cardItems","select","auth","store","applyMiddleware","thunkMiddleware","save","states","createStore","createStoreWithMiddleWare","load","window","clearLocalStorage","clear","CardModalWindow","url","onClose","visible","useEffect","onKeydown","key","document","addEventListener","removeEventListener","className","style","modal","onClick","modalContent","e","stopPropagation","modalBody","src","alt","Pagination","onPageChanged","pageCount","Math","ceil","useState","portionNumber","setPortionNumber","portionCount","changePage","event","preventDefault","pageNumber","Number","currentTarget","textContent","pagination","prev","disabled","paginationItem","active","Array","fill","map","_","idx","p","item","index","next","CardsItems","setUnicIdCard","props","isModal","setModal","modalImg","setModalImg","cardsContainer","card","cardItemWrapper","cardItem","images","large","imgPokemon","small","to","link","description","name","artist","CardItemsContainer","useSelector","dispatch","useDispatch","filterTemp","split","join","a","getCards","CardsItem","Select","onChangeTypes","target","value","onChangeFilter","mainContainer","formContainer","onChange","selectForm","SelectContainer","Cards","InfoWrapper","undefined","CardItemInfo","infoContainer","leftSectionWrapper","imgPokemonInfo","abilities","text","attacks","attack","damage","cost","rightSectionWrapper","hp","resistances","evolvesFrom","withRouter","linkId","isNaN","match","cardId","unicId","getState","getCardInfo","Object","keys","length","Header","navigation","button","logoutImg","logout","HeaderContainer","Login","useForm","register","handleSubmit","errors","formState","formLogin","onSubmit","checkLoginPassword","error","inputLogin","placeholder","required","pattern","inputPassword","minLength","buttonLogin","Otp","checkCodeOtp","autoFocus","maxLength","LoginContainer","setTimeout","App","exact","path","render","rootElement","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.42143050.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__66u2l\",\"paginationItem\":\"Pagination_paginationItem__32vay\",\"prev\":\"Pagination_prev__2jGJ0\",\"next\":\"Pagination_next__22Rxy\",\"active\":\"Pagination_active__3OGaA\",\"disabled\":\"Pagination_disabled__1jOKK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardsContainer\":\"CardsItem_cardsContainer__3uOUM\",\"cardItemWrapper\":\"CardsItem_cardItemWrapper__36pzM\",\"cardItem\":\"CardsItem_cardItem__1LKkZ\",\"imgPokemon\":\"CardsItem_imgPokemon__1c_Jf\",\"link\":\"CardsItem_link__39u8d\",\"description\":\"CardsItem_description__2MBPn\",\"modal\":\"CardsItem_modal__K-z8Z\",\"appear\":\"CardsItem_appear__27vLV\",\"modalContent\":\"CardsItem_modalContent__irKu0\",\"animatetop\":\"CardsItem_animatetop__2TBZ-\",\"slide-in\":\"CardsItem_slide-in__39Vvo\",\"modalBody\":\"CardsItem_modalBody__3O8RF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Select_mainContainer__12wQr\",\"formContainer\":\"Select_formContainer__46A4B\",\"selectForm\":\"Select_selectForm__1oZn1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infoContainer\":\"CardItemInfo_infoContainer__1Y0QR\",\"leftSectionWrapper\":\"CardItemInfo_leftSectionWrapper__2NUlm\",\"imgPokemonInfo\":\"CardItemInfo_imgPokemonInfo__22qe7\",\"description\":\"CardItemInfo_description__1U3MB\",\"rightSectionWrapper\":\"CardItemInfo_rightSectionWrapper__bBHbR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"Header_navigation__1NvSa\",\"logoutImg\":\"Header_logoutImg__2B9k1\",\"logout\":\"Header_logout__1UGPC\",\"button\":\"Header_button__3kSo_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Cards_mainContainer__3bhu4\"};","import axios from 'axios';\r\n\r\nexport const intance = axios.create({\r\n    baseURL: \"https://api.pokemontcg.io/v2/\",\r\n})","import { intance } from \"./api\"\n\ntype AttackType = {\n    name?: string,\n    cost?: Array<string>,\n    convertedEnergyCost?: number,\n    damage?: number,\n    text?: string,\n}\n\ntype WeaknessType = {\n    type?: string,\n    value?: string,\n}\n\ntype SetType = {\n    id?: string,\n    name?: string,\n    series?: string,\n    printedTotal?: number,\n    total?: number,\n    legalities?: { unlimited?: string, expanded?: string },\n    ptcgoCode?: string,\n    releaseDate?: string,\n    updatedAt?: string,\n    images?: { symbol?: string, logo?: string }\n}\n\ntype TCGPlayerType = {\n    url? : string,\n    updatedAt? : string,\n    prices?: pricesType,\n}\n\ntype pricesType = {\n    holofoil? : {\n        low? : number,\n        mid? : number,\n        high? : number,\n        market? : number,\n        directLow? : number,\n    }\n}\n\ntype AbilitiesType = {\n    name : string,\n    text : string,\n    type : string,\n}\n\ntype ResistancesType = {\n    type : string,\n    value : string,\n}\n\nexport type CardType = {\n    id: string,\n    name: string,\n    supertype?: string,\n    subtypes: Array<string>,\n    hp: number,\n    types?: Array<string>,\n    evolvesFrom?: string,\n    evolvesTo?: Array<string>,\n    rules?: Array<string>,\n    attacks?: Array<AttackType>,\n    weaknesses?: Array<WeaknessType>,\n    retreatCost?: Array<string>,\n    convertedRetreatCost?: number,\n    set?: SetType,\n    number?: string,\n    artist?: string,\n    rarity?: string,\n    nationalPokedexNumbers?: Array<number>,\n    legalities?: {unlimited? : string, expanded? : string},\n    images?: {\n        small?: string,\n        large?: string\n    },\n    tcgplayer?: TCGPlayerType,\n    abilities? : Array<AbilitiesType>,\n    resistances? : Array<ResistancesType>,\n}\n\ntype ResponseType = {\n    data : Array<CardType>,\n    page : number,\n    pageSize : number,\n    count : number,\n    totalCount : number,\n}\n\ntype ResponseTypeInfo = {\n    data : CardType\n}\n\nexport const cardAPI = {\n    getCard: (pageSize = 20, page = 1, filter: string) => {\n        return intance.get<ResponseType>('cards', {\n            params: {\n                pageSize: pageSize,\n                page: page,\n                q: filter\n            }\n        }).then(response => response.data);\n    },\n    getCardInfo: (id: number | string) => {\n        return intance.get<ResponseTypeInfo>(`cards/${id}`).then(response => response.data);\n    }\n}","import { cardAPI, CardType } from \"../api/cardAPI\";\r\nimport { InferActionsTypes, ThunkTypeCreator } from \"./redux-store\";\r\n\r\nconst SET_CARDS = \"SET_CARDS\";\r\nconst SET_TOTAL_COUNT = \"SET_TOTAL_COUNT\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_UNIC_ID_CARD = \"SET_UNIC_ID_CARD\";\r\nconst SET_CARD_INFO = \"SET_CARD_INFO\";\r\n\r\nlet initialState = {\r\n  cards: [] as Array<CardType>,\r\n  currentPage: 1,\r\n  totalCount: 100,\r\n  unicIdCard: null as number | null,\r\n  cardInfo: [] as unknown as CardType,\r\n};\r\n\r\ntype InitialStateTypeCard = typeof initialState\r\n\r\nconst cardReducer = (state = initialState, action : ActionsCardReducerType) : InitialStateTypeCard=> {\r\n  switch (action.type) {\r\n    case SET_CARDS:\r\n      return { ...state, cards: [...action.cards] };\r\n    case SET_TOTAL_COUNT:\r\n      return { ...state, totalCount: action.totalCount };\r\n    case SET_CURRENT_PAGE:\r\n      return { ...state, currentPage: action.currentPage };\r\n    case SET_UNIC_ID_CARD:\r\n      return { ...state, unicIdCard: action.unicIdCard };\r\n    case SET_CARD_INFO:\r\n      return { ...state, unicIdCard: null, cardInfo: action.cardInfo };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport type ActionsCardReducerType = InferActionsTypes<typeof actionsCardReducer>\r\n\r\nexport const actionsCardReducer = {\r\n  setCards : (cards : Array<CardType>) => ({ type: SET_CARDS, cards: cards } as const),\r\n\r\n  setTotalCount : (totalCount : number) => ({\r\n    type: SET_TOTAL_COUNT,\r\n    totalCount: totalCount\r\n  } as const),\r\n\r\n  setCurrentPage : (currentPage : number) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage: currentPage\r\n  } as const),\r\n\r\n  setUnicIdCard : (unicIdCard: number) => ({\r\n    type: SET_UNIC_ID_CARD,\r\n    unicIdCard: unicIdCard\r\n  } as const),\r\n\r\n  setCardInfo : (cardInfo : CardType) => ({\r\n    type: SET_CARD_INFO,\r\n    cardInfo,\r\n  } as const)\r\n}\r\n\r\n//thunks\r\n\r\nexport type ThunkTypeCardReducer = ThunkTypeCreator<ActionsCardReducerType>\r\n\r\nexport const getCards = (pageSize : number, page : number, filter : string) : ThunkTypeCardReducer=> async (dispatch) => {\r\n  let response = await cardAPI.getCard(pageSize, page, filter);\r\n  dispatch(actionsCardReducer.setCards(response.data));\r\n  dispatch(actionsCardReducer.setTotalCount(response.totalCount))\r\n}\r\n\r\nexport const getCardInfo = (id : number | string, unicId : number | null = null) : ThunkTypeCardReducer => async (dispatch, getState) => {\r\n  \r\n  if (unicId !== null) {\r\n    const card = getState().cardItems.cards[unicId]\r\n    dispatch(actionsCardReducer.setCardInfo(card));\r\n  }\r\n  else {\r\n    let response = await cardAPI.getCardInfo(id);\r\n    dispatch(actionsCardReducer.setCardInfo(response.data));\r\n  }\r\n}\r\n\r\nexport default cardReducer;\r\n","import { InferActionsTypes } from \"./redux-store\";\r\n\r\nlet initialState = {\r\n  login: \"kode@gmail.com\",\r\n  password: \"12345678\",\r\n  isAuth: false,\r\n  codeOTP: \"123456\",\r\n  isAuthOTP: false,\r\n  errorOTP: false,\r\n  errorAuth: false,\r\n};\r\n\r\ntype InitialStateLogin = typeof initialState;\r\n\r\nconst loginReducer = (state = initialState, action : LoginReducerType) : InitialStateLogin => {\r\n  switch (action.type) {\r\n    case \"CHECK_LOGIN_PASSWORD\":\r\n      if (action.login === state.login && action.password === state.password)\r\n        return { ...state, isAuth: true, errorAuth: false };\r\n      return { ...state, errorAuth: true };\r\n    case \"CHECK_CODE_OTP\":\r\n      if (action.code === state.codeOTP) {\r\n        return { ...state, isAuthOTP: true, errorOTP: false }\r\n      };\r\n      return { ...state, errorOTP: true };\r\n    case \"CLEAR_ERROR_AUTH\":\r\n      return { ...state, errorAuth: false };\r\n    case \"CLEAR_ERROR_OTP\":\r\n      return { ...state, errorOTP: false };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        isAuth: false,\r\n        isAuthOTP: false\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport type LoginReducerType = InferActionsTypes<typeof actionLoginReducer>\r\n\r\nexport const actionLoginReducer = {\r\n  checkLoginPassword : (login : string, password : string) => ({\r\n    type: \"CHECK_LOGIN_PASSWORD\",\r\n    login,\r\n    password\r\n  } as const),\r\n  clearErrorAuth : () => ({type : \"CLEAR_ERROR_AUTH\" } as const),\r\n  clearErrorOtp : () => ({type : \"CLEAR_ERROR_OTP\" } as const),\r\n  checkCodeOtp : (code : string) => ({ type: \"CHECK_CODE_OTP\", code } as const),\r\n  logout : () => ({ type: \"LOGOUT\" } as const),\r\n}\r\n\r\nexport default loginReducer;\r\n","import { intance } from \"./api\";\n\ntype ResponseType = {\n    data : Array<string>\n}\n\n\nexport const selectAPI = {\n    getTypes: () => {\n        return intance.get<ResponseType>('types').then(response => response.data.data);\n    },\n    getSubTypes : () => {\n        return intance.get<ResponseType>('subtypes').then(response => response.data.data);\n    },\n    getSuperTypes: () => {\n        return intance.get<ResponseType>('supertypes').then(response => response.data.data);\n    },  \n    getRarities : () => {\n        return intance.get<ResponseType>('rarities').then(response => response.data.data);\n    }\n}","import { selectAPI } from \"../api/selectAPI\";\r\nimport { InferActionsTypes, ThunkTypeCreator } from \"./redux-store\";\r\n\r\nconst SET_TYPES = \"SET_TYPES\";\r\nconst SET_SUBTYPES = \"SET_SUBTYPES\";\r\nconst SET_SUPERTYPES = \"SET_SUPERTYPES\";\r\nconst SET_RARITIES = \"SET_RARITIES\";\r\nconst SET_SELECT = \"SET_SELECT\";\r\n\r\nexport type SelectFilterType = {\r\n  [key : string] : string\r\n}\r\n\r\nlet initialState = {\r\n  types: [] as Array<string>,\r\n  subtypes: [] as Array<string>,\r\n  supertypes: [] as Array<string>,\r\n  rarities: [] as Array<string>,\r\n  selectFilter: {\r\n    types: \"\",\r\n    subtypes: \"\",\r\n    supertypes: \"\",\r\n    rarities: \"\"\r\n  } as SelectFilterType\r\n};\r\n\r\ntype InitialStateSelectType = typeof initialState;\r\n\r\nconst selectReducer = (state = initialState, action : ActionSelectReducerType): InitialStateSelectType => {\r\n  switch (action.type) {\r\n    case SET_TYPES:\r\n      return { ...state, types: [...action.data] };\r\n    case SET_SUBTYPES:\r\n      return { ...state, subtypes: [...action.data] };\r\n    case SET_SUPERTYPES:\r\n      return { ...state, supertypes: [...action.data] };\r\n    case SET_RARITIES:\r\n      return { ...state, rarities: [...action.data] };\r\n    case SET_SELECT:\r\n      let selectFilterTemp : SelectFilterType = JSON.parse(JSON.stringify(action.selectFilter))\r\n      return { ...state, selectFilter: selectFilterTemp };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport type ActionSelectReducerType = InferActionsTypes<typeof actionsSelectReducer>\r\n\r\nexport const actionsSelectReducer = {\r\n  setTypes : (data : Array<string>) => ({ type: SET_TYPES, data } as const),\r\n  setSubTypes : (data : Array<string>) => ({ type: SET_SUBTYPES, data } as const),\r\n  setSuperTypes : (data : Array<string>) => ({ type: SET_SUPERTYPES, data } as const),\r\n  setRarities : (data : Array<string>) => ({ type: SET_RARITIES, data } as const),\r\n  setSelect : (selectFilter : SelectFilterType) => ({\r\n    type: SET_SELECT,\r\n    selectFilter\r\n  } as const),\r\n}\r\n\r\nexport type ThunkTypeSelectReducer = ThunkTypeCreator<ActionSelectReducerType>\r\n\r\n//Thunks\r\nexport const getTypes = () : ThunkTypeSelectReducer => async (dispatch) => {\r\n  let data = await selectAPI.getTypes();\r\n  dispatch(actionsSelectReducer.setTypes(data));\r\n}\r\n\r\nexport const getSubTypes = () : ThunkTypeSelectReducer => async (dispatch) => {\r\n  let data = await selectAPI.getSubTypes();\r\n  dispatch(actionsSelectReducer.setSubTypes(data));\r\n}\r\n\r\nexport const getSuperTypes = () : ThunkTypeSelectReducer => async (dispatch) => {\r\n  let data = await selectAPI.getSuperTypes();\r\n  dispatch(actionsSelectReducer.setSuperTypes(data));\r\n}\r\n\r\nexport const getRarities = () : ThunkTypeSelectReducer => async (dispatch) => {\r\n  let data = await selectAPI.getRarities();\r\n  dispatch(actionsSelectReducer.setRarities(data));\r\n}\r\n\r\nexport default selectReducer;\r\n","import { Action, applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport cardReducer from \"./card-reducer\";\r\nimport loginReducer from \"./login-reducer\";\r\nimport selectReducer from \"./select-reducer\";\r\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk';\r\nimport {save, load, clear} from \"redux-localstorage-simple\";\r\n\r\nlet reducers = combineReducers({\r\n  cardItems: cardReducer,\r\n  select: selectReducer,\r\n  auth: loginReducer\r\n}); \r\n\r\ntype RootReducerType = typeof reducers;\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\n//Actions create types\r\ntype PropertiesTypes<T> = T extends {[key : string]: infer U} ? U : never;\r\nexport type InferActionsTypes<T extends  {[key : string]: (...args : any[]) => any}> = ReturnType<PropertiesTypes<T>>\r\n\r\nexport type ThunkTypeCreator<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\nconst createStoreWithMiddleWare = applyMiddleware(thunkMiddleware, save({states : [\"auth\"]}))(createStore);\r\n\r\nlet store = createStoreWithMiddleWare(reducers, load({states:[\"auth\"]}));\r\n\r\n//@ts-ignore\r\nwindow.clearLocalStorage = () => {\r\n  clear({\r\n    //@ts-ignore\r\n    states:[\"auth\"]\r\n  });\r\n}\r\n\r\n//@ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;\r\n","import React, { useEffect } from 'react';\nimport style from \"./CardsItem.module.css\";\n\ntype PropsType = {\n    url : string | undefined\n    onClose : () => void\n    visible : boolean\n}\n\nconst CardModalWindow : React.FC<PropsType> = ({url, onClose, visible}) => {\n    useEffect(()=>{\n        const onKeydown = ({key} : KeyboardEvent) => {\n            switch(key){\n                case 'Escape':\n                    onClose();\n                    break;\n            }\n        }\n\n        document.addEventListener('keydown', onKeydown);\n        return () => document.removeEventListener('keydown', onKeydown)\n    }, [onClose])\n\n    if (!visible) return null\n    return <div className={style.modal} onClick={onClose}>\n    <div className={style.modalContent} onClick={e => e.stopPropagation()}>\n      <div className={style.modalBody}>\n        <img src={url} alt=\"\" />\n      </div>\n    </div>\n  </div>\n}\n\nexport default CardModalWindow","import React, { MouseEvent, useEffect, useState } from \"react\";\r\nimport style from \"./Pagination.module.css\";\r\n\r\ntype PropsType = {\r\n  totalCount : number,\r\n  onPageChanged : (page : number) => void,\r\n  currentPage : number;\r\n}\r\n\r\nconst Pagination : React.FC<PropsType>= ({ totalCount, onPageChanged, currentPage }) => {\r\n  let portionSize = 5;\r\n\r\n  let pageCount = Math.ceil(totalCount / 20);\r\n\r\n  let [portionNumber, setPortionNumber] = useState(Math.ceil(currentPage / portionSize));\r\n\r\n  useEffect(() => setPortionNumber(1), [totalCount])\r\n\r\n  let portionCount = Math.ceil(pageCount / 5);\r\n\r\n  const goToPreviousPage = () => {\r\n    setPortionNumber(Math.ceil((currentPage - 1) / portionSize));\r\n    onPageChanged(currentPage - 1);\r\n  };\r\n\r\n  const goToNextPage = () => {\r\n    setPortionNumber(Math.ceil((currentPage + 1) / portionSize));\r\n    onPageChanged(currentPage + 1);\r\n  };\r\n\r\n  const changePage = (event : MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault()\r\n    const pageNumber = Number(event.currentTarget.textContent);\r\n    onPageChanged(pageNumber);\r\n    \r\n  };\r\n\r\n  const getPaginationGroup = () => {\r\n    return new Array(portionSize).fill(0).map((_, idx) => portionSize * (portionNumber - 1) + idx + 1);\r\n  };\r\n\r\n  return (\r\n\r\n    <div className={style.pagination}>\r\n      {portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)} className={style.prev}>&#60;</button>}\r\n      <button\r\n        onClick={goToPreviousPage}\r\n        className={`${style.prev} ${currentPage === 1 ? `${style.disabled}` : \"\"\r\n          }`}\r\n      >\r\n        prev\r\n      </button>\r\n\r\n      {portionNumber !== 1 ? <span><button\r\n        onClick={(e) => {\r\n          setPortionNumber(1);\r\n          changePage(e);\r\n        }}\r\n        className={`${style.paginationItem} ${currentPage === 1 ? `${style.active}` : null\r\n          }`}\r\n      >\r\n        <span>1</span>\r\n      </button>...</span> : null}\r\n\r\n      {getPaginationGroup()\r\n        .filter(p => p >= 1 && p <= pageCount)\r\n        .map((item, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={(e) => changePage(e)}\r\n            className={`${style.paginationItem} ${currentPage === item ? `${style.active}` : null\r\n              }`}\r\n          >\r\n            <span>{item}</span>\r\n          </button>\r\n        ))}\r\n\r\n      {portionNumber !== portionCount ? <span>...<button\r\n        onClick={(e) => {\r\n          setPortionNumber(portionCount);\r\n          changePage(e);\r\n        }}\r\n        className={`${style.paginationItem} ${currentPage === pageCount ? `${style.active}` : null\r\n          }`}\r\n      >\r\n        <span>{pageCount}</span>\r\n      </button> </span> : null}\r\n\r\n      <button\r\n        onClick={goToNextPage}\r\n        className={`${style.next} ${currentPage === pageCount ? `${style.disabled}` : \"\"\r\n          }`}\r\n      >\r\n        next\r\n      </button>\r\n\r\n      {portionNumber < portionCount && <button onClick={() => setPortionNumber(portionNumber + 1)} className={style.next}>&#62;</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { CardType } from \"../../../api/cardAPI\";\r\nimport CardModalWindow from \"./CardModalWindow\";\r\nimport style from \"./CardsItem.module.css\";\r\nimport Pagination from \"./Pagination\";\r\n\r\ntype PropsType = {\r\n  cards: Array<CardType>,\r\n  totalCount: number,\r\n  onPageChanged: (page: number) => void,\r\n  currentPage: number,\r\n  setUnicIdCard: (id: number) => void\r\n}\r\n\r\nconst CardsItems: React.FC<PropsType> = ({ cards, setUnicIdCard, ...props }) => {\r\n\r\n  const [isModal, setModal] = useState(false);\r\n  const [modalImg, setModalImg] = useState<string|undefined>('')\r\n\r\n  const onClose = () => {setModal(false); setModalImg('')};\r\n\r\n  return (\r\n    <div>\r\n      <CardModalWindow url={modalImg}\r\n        visible={isModal}\r\n        onClose={onClose} />\r\n\r\n      <ul className={style.cardsContainer}>\r\n        {cards.map((item, index) => (\r\n          <li\r\n            key={item.id}\r\n            className={style.card + ' ' + style.cardItemWrapper}\r\n          >\r\n            <div className={style.cardItem} onClick={() => {setModal(true); setModalImg(item.images?.large)}}>\r\n              <div className={style.imgPokemon}>\r\n                <img src={item.images?.small} alt=\"\" />\r\n              </div>\r\n\r\n\r\n              <NavLink to={`/card/${item.id}`} className={style.link} onClick={() => { setUnicIdCard(index) }}>\r\n                <div className={style.description}>\r\n                  <p>{item.name}</p>\r\n                  <p>{item.artist}</p>\r\n                </div>\r\n              </NavLink>\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      {props.totalCount ? <Pagination\r\n        totalCount={props.totalCount}\r\n        onPageChanged={props.onPageChanged}\r\n        currentPage={props.currentPage}\r\n      /> : <div>NOT FOUND</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardsItems;\r\n","import React, { Dispatch, useEffect } from \"react\";\r\nimport CardsItems from \"./CardsItem\";\r\nimport {\r\n  getCards,\r\n  actionsCardReducer,\r\n  ThunkTypeCardReducer,\r\n  ActionsCardReducerType\r\n} from \"../../../redux/card-reducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../../redux/redux-store\";\r\n\r\ntype PropsType = {}\r\n\r\nconst CardItemsContainer : React.FC<PropsType> = (props) => {\r\n\r\n  const cards = useSelector((state : AppStateType) => state.cardItems.cards);\r\n  const currentPage = useSelector((state : AppStateType) => state.cardItems.currentPage);\r\n  const totalCount = useSelector((state : AppStateType) => state.cardItems.totalCount);\r\n  const filter = useSelector((state : AppStateType) => state.select.selectFilter)\r\n\r\n  const dispatch : Dispatch<ThunkTypeCardReducer | ActionsCardReducerType> = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(actionsCardReducer.setCurrentPage(1));\r\n  },[dispatch, filter])\r\n  \r\n  useEffect(() => {\r\n    let filterTemp = \"\";\r\n    for (let key in filter) {\r\n      if (filter[key])\r\n        filterTemp =\r\n          filterTemp +\r\n          key +\r\n          \":\" +\r\n          filter[key].split(\" \").join(\"\") +\r\n          \" \";\r\n    }\r\n\r\n    dispatch(getCards(20, currentPage, filterTemp))\r\n  }, [filter, currentPage, dispatch])\r\n\r\n  \r\n\r\n  const onPageChanged = (pageNumber : number) => {\r\n    dispatch(actionsCardReducer.setCurrentPage(pageNumber));\r\n  };\r\n\r\n  const selectCard = (index : number) => {\r\n    dispatch(actionsCardReducer.setUnicIdCard(index));\r\n  }\r\n  return <>\r\n    <CardsItems\r\n      cards={cards}\r\n      totalCount={totalCount}\r\n      onPageChanged={onPageChanged}\r\n      currentPage={currentPage}\r\n      setUnicIdCard={selectCard}\r\n    />\r\n  </>\r\n}\r\n\r\n\r\nexport default CardItemsContainer;\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { SelectFilterType } from \"../../../redux/select-reducer\";\r\nimport style from \"./Select.module.css\";\r\n\r\ntype PropsType = {\r\n  types: Array<string>\r\n  subtypes: Array<string>\r\n  supertypes : Array<string>\r\n  rarities : Array<string>\r\n  onChangeFilter : (selectFilter : SelectFilterType) => void\r\n}\r\n\r\nconst Select : React.FC<PropsType> = (props) => {\r\n  let selectFilter = {\r\n    types: \"\",\r\n    subtypes: \"\",\r\n    supertypes: \"\",\r\n    rarities: \"\"\r\n  };\r\n\r\n  const onChangeTypes = (e : ChangeEvent<HTMLSelectElement>) => {\r\n    switch (e.target.name) {\r\n      case \"filterTypes\":\r\n        selectFilter.types = e.target.value;\r\n        break;\r\n      case \"filterSubtypes\":\r\n        selectFilter.subtypes = e.target.value;\r\n        break;\r\n      case \"filterSupertypes\":\r\n        selectFilter.supertypes = e.target.value;\r\n        break;\r\n      case \"filterRarities\":\r\n        selectFilter.rarities = e.target.value;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    props.onChangeFilter(selectFilter);\r\n  };\r\n  return (\r\n    <div className={style.mainContainer}>\r\n      <div className={style.formContainer}>\r\n        <select\r\n          name=\"filterTypes\"\r\n          id=\"filterTypes\"\r\n          onChange={onChangeTypes}\r\n          className={style.selectForm}\r\n        >\r\n          <option value=\"\">Select types</option>\r\n          {props.types.map((item, index) => (\r\n            <option value={item} key={index}>\r\n              {item}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className={style.formContainer}>\r\n        <select\r\n          name=\"filterSubtypes\"\r\n          id=\"filterSubtypes\"\r\n          onChange={onChangeTypes}\r\n          className={style.selectForm}\r\n        >\r\n          <option value=\"\">Select subtypes</option>\r\n          {props.subtypes.map((item, index) => (\r\n            <option value={item} key={index}>\r\n              {item}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className={style.formContainer}>\r\n        <select\r\n          name=\"filterSupertypes\"\r\n          id=\"filterSupertypes\"\r\n          onChange={onChangeTypes}\r\n          className={style.selectForm}\r\n        >\r\n          <option value=\"\">Select supertypes</option>\r\n          {props.supertypes.map((item, index) => (\r\n            <option value={item} key={index}>\r\n              {item}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className={style.formContainer}>\r\n        <select\r\n          name=\"filterRarities\"\r\n          id=\"filterRarities\"\r\n          onChange={onChangeTypes}\r\n          className={style.selectForm}\r\n        >\r\n          <option value=\"\">Select rarities</option>\r\n          {props.rarities.map((item, index) => (\r\n            <option value={item} key={index}>\r\n              {item}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Dispatch, useEffect } from \"react\";\r\nimport Select from \"./Select\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getRarities,\r\n  getSubTypes,\r\n  getSuperTypes,\r\n  getTypes,\r\n  actionsSelectReducer,\r\n  SelectFilterType,\r\n  ThunkTypeSelectReducer,\r\n  ActionSelectReducerType\r\n} from \"../../../redux/select-reducer\";\r\nimport { AppStateType } from \"../../../redux/redux-store\";\r\n\r\ntype PropsType = {}\r\n\r\nconst SelectContainer : React.FC<PropsType> = (props) => {\r\n  const types = useSelector((state : AppStateType) => state.select.types);\r\n  const subtypes = useSelector((state : AppStateType) => state.select.subtypes);\r\n  const supertypes = useSelector ((state : AppStateType) => state.select.supertypes);\r\n  const rarities = useSelector ((state : AppStateType) => state.select.rarities);\r\n\r\n  const dispatch : Dispatch<ThunkTypeSelectReducer | ActionSelectReducerType> = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getTypes());\r\n    dispatch(getSubTypes());\r\n    dispatch(getSuperTypes());\r\n    dispatch(getRarities());\r\n  }, [dispatch])\r\n\r\n  const onChangeFilter = (selectFilter : SelectFilterType) => {\r\n    dispatch(actionsSelectReducer.setSelect(selectFilter))\r\n  }\r\n\r\n\r\n  //TODO : 1 response 1 render! v3 app\r\n  return <>\r\n  <Select\r\n    types={types}\r\n    subtypes={subtypes}\r\n    supertypes={supertypes}\r\n    rarities={rarities}\r\n    onChangeFilter={onChangeFilter}\r\n  />\r\n</>\r\n}\r\n\r\nexport default SelectContainer;\r\n","import React from \"react\";\r\nimport style from \"./Cards.module.css\";\r\nimport CardsItemsContainer from \"./CardsItem/CardsItemContainer\";\r\nimport SelectContainer from \"./Select/SelectContainer\";\r\n\r\ntype PropsType = {}\r\n\r\nconst Cards : React.FC<PropsType> = (props) => {\r\n  return (\r\n    <div className={style.mainContainer}>\r\n      <SelectContainer />\r\n      <CardsItemsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport { CardType } from \"../../../../api/cardAPI\";\r\nimport style from \"./CardItemInfo.module.css\";\r\n\r\ntype InputDataInfoWrapper = {\r\n  name : string,\r\n  data : string [] | string | number |  undefined \r\n}\r\n\r\nconst InfoWrapper  = ({name, data = undefined} : InputDataInfoWrapper) => (data ? <p><b>{name}</b> : {data}</p> : null);\r\n\r\ntype PropsType = {\r\n  card : CardType\r\n}\r\n\r\nconst CardItemInfo : React.FC<PropsType> = ({card}) => {\r\n  return (\r\n    <div className={style.infoContainer}>\r\n      <div className={style.leftSectionWrapper}>\r\n        <img\r\n          src={card.images?.large}\r\n          alt=\"\"\r\n          className={style.imgPokemonInfo}\r\n        />\r\n        <div className={style.description}>\r\n          {card.abilities ? card.abilities.map((abilities, index) => <div key ={index}>\r\n            <InfoWrapper name={`Abilities Name`} data = {abilities.name}/>\r\n            <InfoWrapper name={`Abilities Text`} data = {abilities.text}/>\r\n          </div>) : null}\r\n          {card.attacks ?card.attacks.map((attack,index) => <div key = {index}> \r\n            <InfoWrapper name={`Attack Name #${index+1}`} data = {attack.name}/>\r\n            <InfoWrapper name={\"Attack Damage \"} data = {attack.damage}/>\r\n            <InfoWrapper name={\"Attack Cost \"} data = {attack.cost?.join(' ')}/>\r\n            <InfoWrapper name={\"Attack desription\"} data = {attack.text}/>\r\n          </div>) : null}\r\n        </div>\r\n      </div>\r\n      <div className={style.rightSectionWrapper}>\r\n        <div>\r\n          <ul>\r\n            <InfoWrapper name={\"Pokemon name\"} data = {card.name}/>\r\n            <InfoWrapper name={\"Pokemon ID\"} data = {card.id}/>\r\n            <InfoWrapper name={\"Type\"} data = {card.types}/>\r\n            <InfoWrapper name={\"SubType\"} data = {card.subtypes}/>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <ul>\r\n          <InfoWrapper name={\"Hp\"} data = {card.hp}/>\r\n            {card.resistances ? card.resistances.map(key => <InfoWrapper name={\"resistances\"} data = {key.type + ' ' + key.value}/>) : null}\r\n            <InfoWrapper name={\"Evolve from\"} data = {card.evolvesFrom}/>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default CardItemInfo;\r\n","import React, { Dispatch, useEffect } from \"react\";\r\nimport { RouteComponentProps, withRouter } from \"react-router\";\r\nimport CardItemInfo from \"./CardItemInfo\";\r\nimport {getCardInfo, ThunkTypeCardReducer} from '../../../../redux/card-reducer'\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";  \r\nimport { AppStateType } from \"../../../../redux/redux-store\";\r\n\r\ntype PathParamType = {\r\n  cardId : string\r\n}\r\n\r\n//Some props \r\ntype OwnPropsType = {}\r\n\r\ntype PropsType = RouteComponentProps<PathParamType> & OwnPropsType\r\n\r\nconst CardItemInfoContainer : React.FC<PropsType> = (props) => {\r\n  const linkId = isNaN(+props.match.params.cardId) ? props.match.params.cardId : +props.match.params.cardId;\r\n\r\n  const card = useSelector((state : AppStateType) => state.cardItems.cardInfo);\r\n  const unicId = useSelector((state : AppStateType) => state.cardItems.unicIdCard);\r\n\r\n  const dispatch : Dispatch<ThunkTypeCardReducer>= useDispatch();\r\n\r\n  useEffect(() => {\r\n    const id : number | string = linkId;\r\n    dispatch(getCardInfo(id, unicId))\r\n  }, [dispatch, linkId, unicId])\r\n\r\n  if (typeof card === \"object\" && Object.keys(card).length !== 0) \r\n      return <CardItemInfo card = {card}/>;\r\n    return <div>Loading...</div>\r\n} \r\n\r\nexport default withRouter(CardItemInfoContainer)\r\n","import React from \"react\";\r\nimport style from \"./Header.module.css\";\r\n\r\ntype PropsType = {\r\n  logout : () => void\r\n}\r\n\r\nconst Header : React.FC<PropsType> = (props) => {\r\n  return (\r\n    <div className={style.navigation}>\r\n      <div className={style.button}>\r\n        <img\r\n          src=\"https://e7.pngegg.com/pngimages/466/448/png-clipart-computer-icons-button-user-profile-button-angle-text-thumbnail.png\"\r\n          alt=\"\"\r\n          className={style.logoutImg}\r\n        />\r\n        <div onClick={props.logout} className={style.logout}>\r\n          LOGOUT\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { actionLoginReducer} from \"../../redux/login-reducer\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport Header from \"./Header\";\r\n\r\nconst HeaderContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isAuth = useSelector((state : AppStateType) => state.auth.isAuth);\r\n  const isAuthOTP = useSelector((state : AppStateType) => state.auth.isAuthOTP);\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(actionLoginReducer.logout())\r\n  }\r\n\r\n  return <>\r\n    {isAuth && isAuthOTP ? (\r\n          <Header logout={logoutHandler} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )}\r\n  </>\r\n}\r\n\r\nexport default HeaderContainer;","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport style from \"./Login.module.css\";\r\n\r\ntype PropsType = {\r\n  checkLoginPassword : (login : string, password : string) => void, \r\n  errorAuth : boolean\r\n}\r\n\r\nconst Login : React.FC<PropsType> = (props) => {\r\n  const { register, handleSubmit, formState: {errors} } = useForm(); \r\n  const onSubmit = (data : {login : string, password : string}) =>\r\n    props.checkLoginPassword(data.login, data.password);\r\n\r\n  return (\r\n    <div className={style.formLogin}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {props.errorAuth && <div className = {style.error}>Incorrect email or password</div>}\r\n        <input\r\n          className={style.inputLogin}\r\n          placeholder=\"login\"\r\n          {...register(\"login\", {\r\n            required : true,\r\n            pattern : /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/,\r\n          })}\r\n        />\r\n        {errors?.login?.type === \"pattern\" && <div className = {style.error}>Incorrect email</div>}\r\n        {errors?.login?.type === \"required\" && <div className = {style.error}>Requred field login</div>}\r\n        <input\r\n          className={style.inputPassword}\r\n          placeholder=\"password\"\r\n          type=\"password\"\r\n          {...register(\"password\", {\r\n            minLength : 8,\r\n            required : true,\r\n          })}\r\n        />\r\n\r\n        {errors?.password?.type === \"minLength\" && <div className = {style.error}>Min length : 8 symbols</div>}\r\n        {errors?.password?.type === \"pattern\" && <div className = {style.error}>Requred field</div>}\r\n\r\n        <input type=\"submit\" value=\"login\" className={style.buttonLogin} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport style from \"./Login.module.css\";\r\n\r\ntype PropsType = {\r\n  checkCodeOtp : (otp : string) => void,\r\n  errorOTP : boolean,\r\n}\r\n\r\nconst Otp : React.FC<PropsType> = (props) => {\r\n  const { register, handleSubmit , formState: {errors}} = useForm();\r\n  const onSubmit = (data : {codeOTP : string}) => {\r\n    props.checkCodeOtp(data.codeOTP);\r\n  }\r\n  return (\r\n    <div>\r\n      \r\n      <form onSubmit={handleSubmit(onSubmit)} className={style.formLogin}>\r\n        {props.errorOTP && <div className = {style.error}>INCORRECT CODE</div>}\r\n        <input\r\n          placeholder=\"code\"\r\n          autoFocus\r\n          {...register(\"codeOTP\",  {required : true, minLength : 6, maxLength : 6})}\r\n          \r\n          className={style.inputLogin}\r\n        />\r\n        {errors?.codeOTP?.type === \"required\" && <div className = {style.error}>This field is requred</div>}\r\n        {errors?.codeOTP?.type === \"minLength\" && <div className = {style.error}> Length code equal 6</div>}\r\n        {errors?.codeOTP?.type === \"maxLength\" && <div className = {style.error}> Length code equal 6</div>}\r\n        <input type=\"submit\" className={style.buttonLogin} value=\"confirm\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Otp;\r\n","import React, { Dispatch, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {\r\n  actionLoginReducer, LoginReducerType\r\n} from \"../../redux/login-reducer\";\r\nimport { AppStateType } from \"../../redux/redux-store\";\r\nimport Login from \"./Login\";\r\nimport Otp from \"./Otp\";\r\n\r\ntype PropsType = {}\r\n\r\nconst LoginContainer : React.FC<PropsType> = (props) => {\r\n  const dispatch : Dispatch<LoginReducerType> = useDispatch();\r\n\r\n  const isAuth = useSelector((state : AppStateType) => state.auth.isAuth);\r\n  const isAuthOTP = useSelector((state : AppStateType )  => state.auth.isAuthOTP);\r\n  const errorOTP = useSelector((state : AppStateType)  => state.auth.errorOTP)\r\n  const errorAuth = useSelector((state : AppStateType) => state.auth.errorAuth)\r\n\r\n  useEffect(() => {\r\n    if (errorAuth) {\r\n      setTimeout(() => {\r\n        dispatch(actionLoginReducer.clearErrorAuth());\r\n      }, 3000);\r\n    }\r\n  }, [dispatch, errorAuth])\r\n\r\n  useEffect(() => {\r\n    if (errorOTP) {\r\n      setTimeout(() => {\r\n        dispatch(actionLoginReducer.clearErrorOtp());\r\n      }, 3000);\r\n    }\r\n  }, [dispatch, errorOTP])\r\n\r\n  const checkCodeOtpForm = (codeOTP : string) => {\r\n    dispatch(actionLoginReducer.checkCodeOtp(codeOTP));\r\n  }\r\n\r\n  const checkLoginPasswordForm = (login : string, password : string) => {\r\n    dispatch(actionLoginReducer.checkLoginPassword(login, password));\r\n  }\r\n\r\n  return <>\r\n    {isAuth && isAuthOTP ? (\r\n      <Redirect to=\"/\" />\r\n    ) : isAuth ? (\r\n      <Otp checkCodeOtp={checkCodeOtpForm} errorOTP={errorOTP} />\r\n    ) : (\r\n      <Login checkLoginPassword={checkLoginPasswordForm} errorAuth={errorAuth} />\r\n    )}\r\n  </>\r\n}\r\n\r\nexport default LoginContainer;","import { Route } from \"react-router-dom\";\nimport Cards from \"./components/Cards/Cards\";\nimport CardItemInfoContainer from \"./components/Cards/CardsItem/CardItemInfo/CardItemInfoContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginContainer from \"./components/Login/LoginContainer\";\nimport \"./styles.css\";\n\ntype PropsType = {}\n\nconst App : React.FC<PropsType> = (props) => {\n    return (\n    <div className=\"App\">\n      <Route\n        exact\n        path=\"/\"\n        render={() => (\n          <>\n            <HeaderContainer />\n            <Cards />\n          </>\n        )}\n      />\n      <Route path=\"/login\" render={() => <LoginContainer />} />\n      <Route\n        path=\"/card/:cardId?\"\n        render={() => (\n          <>\n            <HeaderContainer />\n            <CardItemInfoContainer />\n          </>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nimport App from \"./App\";\nimport { HashRouter } from \"react-router-dom\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <StrictMode>\n        <App />\n      </StrictMode>\n    </Provider>\n  </HashRouter>,\n  rootElement\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formLogin\":\"Login_formLogin__2-ClA\",\"buttonLogin\":\"Login_buttonLogin__220TM\",\"inputPassword\":\"Login_inputPassword__3gwBU\",\"inputLogin\":\"Login_inputLogin__3yXeo\",\"error\":\"Login_error__17Wu6\"};"],"sourceRoot":""}